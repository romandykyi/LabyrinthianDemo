@inject MazeState MazeState

@if (MazeState.Maze != null)
{
	<MudText Typo="Typo.h6" Align="Align.Center">@MazeState.Maze.ToString()</MudText>
}
<MudGrid Justify="Justify.Center">
	<MudItem xs="12" sm="12" md="8" lg="6">
		@mazeSvg
	</MudItem>
</MudGrid>

@code {
	private MarkupString mazeSvg { get; set; } = new();

	private async Task OnMazeUpdated()
	{
		if (MazeState.Maze == null) return;

		// Create a maze exporter
		MazeSvgExporter exporter = new(MazeState.Maze)
		{
			Walls.AsOnePath()
		};
		// Export maze into a string
		using StringWriter stringWriter = new();
		using (SvgWriter svgWriter = new(stringWriter))
		{
			await exporter.ExportAsync(svgWriter);
		}
		// Render an SVG
		mazeSvg = new(stringWriter.ToString());
		StateHasChanged();
	}

	protected override void OnInitialized()
	{
		MazeState.StateChanged += OnMazeUpdated;
	}
}
